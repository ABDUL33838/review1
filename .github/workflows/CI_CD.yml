name: Property Management System CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # --- Backend CI Steps ---
      - name: Set up Backend Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Backend Dependencies
        run: npm install
        working-directory: ./backend
      - name: Run Backend Tests
        run: npm test
        working-directory: ./backend

      # --- Frontend CI Steps ---
      - name: Set up Frontend Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./frontend
      - name: Run Frontend Tests
        run: npm test
        working-directory: ./frontend
      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # --- Deployment Steps ---
      # This is a placeholder. You must replace it with your specific deployment logic.
      # For a Vercel deployment of a frontend:
      # - name: Deploy to Vercel
      #   run: |
      #     npm install --global vercel
      #     vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      #     vercel build
      #     vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      # For a backend deployment to AWS:
      # - name: Deploy to AWS Elastic Beanstalk
      #   uses: einaregilsson/beanstalk-deploy@v21
      #   with:
      #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws_region: us-east-1
      #     application_name: my-property-app
      #     environment_name: my-property-app-env
      #     version_label: ${{ github.sha }}
      #     existing_bundle: 'bundle.zip'
